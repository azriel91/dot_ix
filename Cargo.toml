[package]
name = "dot_ix"
description = "Interactive dot graphs"
documentation = "https://docs.rs/dot_ix/"
version.workspace = true
authors.workspace = true
edition.workspace = true
repository.workspace = true
homepage.workspace = true
readme.workspace = true
categories.workspace = true
keywords.workspace = true
license.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
axum = { workspace = true, optional = true }
console_error_panic_hook = { workspace = true }
console_log = { workspace = true }
cfg-if = { workspace = true }
dot_ix_static_check_macros = { workspace = true, optional = true }
indexmap = { workspace = true, features = ["serde"] }
indoc = { workspace = true }
leptos = { workspace = true }
leptos_axum = { workspace = true, optional = true }
leptos_meta = { workspace = true }
leptos_router = { workspace = true }
log = { workspace = true }
simple_logger = { workspace = true }
serde = { workspace = true, features = ["derive"] }
tailwind-css = { workspace = true, optional = true }
tempfile = { workspace = true, optional = true }
tokio = { workspace = true, optional = true }
tower = { workspace = true, optional = true }
tower-http = { version = "0.4", features = ["fs"], optional = true }
thiserror = { workspace = true }
tracing = { workspace = true, optional = true }
http = { workspace = true }
serde_yaml = { workspace = true }
lz-str = "0.2.1"

[target.'cfg(target_arch = "wasm32")'.dependencies]
js-sys = { workspace = true }
wasm-bindgen = { workspace = true }
web-sys = { workspace = true, features = ["Document", "Element", "HtmlElement", "Url", "UrlSearchParams", "Window"] }

[features]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
    "dep:axum",
    "dep:dot_ix_static_check_macros",
    "dep:tokio",
    "tokio?/macros",
    "tokio?/process",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "dep:tempfile",
    "dep:tracing",
]
csr = [
    "leptos/csr",
    "leptos_meta/csr",
    "leptos_router/csr",
]
server_side_graphviz = []
tailwind_rs = ["dep:tailwind-css"]

[workspace]
members = ["crate/*"]

[workspace.package]
version = "0.1.0"
authors = ["Azriel Hoh <azriel91@gmail.com>"]
edition = "2021"
homepage = "https://github.com/azriel91/dot_ix"
repository = "https://github.com/azriel91/dot_ix"
readme = "README.md"
categories = ["visualization"]
keywords = ["graphviz", "dot"]
license = "MIT OR Apache-2.0"

[workspace.dependencies]
# dot_ix crates
dot_ix_static_check_macros = { version = "0.1.0", path = "crate/static_check_macros" }

# external crates
axum = "0.6.20"
console_error_panic_hook = "0.1"
console_log = "1"
cfg-if = "1"
indexmap = "2.1.0"
indoc = "2.0.4"
js-sys = "0.3.65"
web-sys = "0.3.65"
leptos = { version = "0.5" }
leptos_axum = "0.5"
leptos_meta = { version = "0.5" }
leptos_router = { version = "0.5" }
log = "0.4"
simple_logger = "4"
serde = "1.0.192"
tempfile = "3.8.1"
tokio = "1.34.0"
tower = "0.4.13"
wasm-bindgen = "0.2.88"
tailwind-css = "0.13.0"
thiserror = "1.0.50"
tracing = "0.1.40"
http = "0.2.11"
proc-macro2 = "1.0.69"
quote = "1.0.33"
syn = "2.0.39"
serde_yaml = "0.9.27"

[package.metadata.cargo-all-features]
denylist = ["axum", "tokio", "tower", "tower-http", "leptos_axum"]
skip_feature_sets = [["ssr", "hydrate"]]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "dot_ix"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
tailwind-input-file = "style/tailwind.css"
tailwind-config-file = "style/tailwind.config.js"
# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:7890) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:7890"

# The port to use for automatic reload monitoring
reload-port = 7891

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# Set by cargo-leptos watch when building with that tool. Controls whether autoreload JS will be included in the head
watch = false

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
# bin-features = ["ssr"]     # server side rendered app
# bin-features = ["hydrate"] # client side compilation for server side rendered app
# bin-features = ["csr"]     # client side rendered app
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# Makes builds go much faster.
separate-front-target-dir = true
